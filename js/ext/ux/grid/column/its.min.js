/**
 * @class Its.grid.column.Component
 * @extends Ext.grid.column.Column
 * @xtype itscomponentcolumn
 * @version 2.3
 * @author Nguyen Truong Sinh (vietits@yahoo.com)
 *
 * A column definition class which renders a component, or a series of components in a grid cell.
 * 
 *     @example
 *     var store = Ext.create('Ext.data.Store', {
 *         fields:['taskname', 'status', 'assignTo', 'dep'],
 *         data:[
 *             {taskname:"Task 1", status:1, assignTo:"Scott", dep:"Manangement"},
 *             {taskname:"Task 2", status:2, assignTo:"John", dep:"Sales"},
 *             {taskname:"Task 3", status:2, assignTo:"Smith", dep:"Accounting"},
 *             {taskname:"Task 4", status:3, assignTo:"Smith", dep:"Accounting"}
 *         ]
 *     });
 *
 *     Ext.create('Ext.grid.Panel', {
 *         title: 'Component Column Demo',
 *         name : 'task',
 *         store: store,
 *         columns: [{
 *          .......
 *          },{ // a column with a combobox
 *              xtype: 'itscomponentcolumn',
 *              text : 'Status',
 *              width: 160,
 *              name : 'status',
 *              dataIndex: 'status',
 *              items: {
 *                  prepare: function(config, value) {
 *                      return { 
 *                          xtype: 'combobox',
 *                          store: [[1,'In Queue'], [2,'Handling'], [3,'Complete']], 
 *                          value: value
 *                      }; 
 *                  }
 *              }
 *          },{ // a column with two buttons to modify/delete task
 *              xtype: 'itscomponentcolumn',
 *              align: 'center',
 *              width: 50,
 *              name : 'action',
 *              defaults: { // default configs applied for all items
 *                  xtype: 'button',
 *                  width: 'auto'
 *              },
 *              items: [{
 *                  iconCls: 'icon-modify',
 *                  action : 'modify',
 *                  tooltip: 'Modify this task'
 *              },{
 *                  iconCls: 'icon-delete',
 *                  action : 'delete',
 *                  tooltip: 'Delete this task'
 *              }]
 *         }],
 *         width: 400,
 *         renderTo: Ext.getBody()
 *     });
 *
 * # Default settings
 *
 * - hideable: false
 * - groupable: false
 * - defaultType: 'component'
 *
 * # Child component events
 *
 * The following arguments will be added to the end of argument list of each event:
 *
 * - record The record providing the data.
 * - rowIndex The row index.
 * - colIndex The column index.
 * - store The store which provides model data
 * - view The grid view object.
 * - comp The component itself.
 *
 * @update 2012-01-14 22:37:21
 *  Release version 1.0
 *
 * @update 2012-01-24 08:37:09
 *  Release version 2.0 with the following updates:
 *  - Remove relayEvents, eventPrefix and prefixEvent from component config which can be replaced by bubbleEvents and bubblePrefix.
 *  - Add ownerCt to reflect component's owner container.
 *  - Add the ability that is an item config can be a function.
 *  - Fix the destroy() method.
 *
 * @update 2012-03-17 21:23:34
 *  Release version 2.1 with the following updates:
 *  - Append record and store to event arguments 
 *  - Update internal code
 * @update 2012-04-23 19:48:46
 *  Release version 2.2 with the following updates:
 *  - Update internal code
 * @update 2012-05-05 09:58:07
 *  Release version 2.3 with the following updates:
 *  - Update internal code
 */Ext.define("Ext.ux.grid.column.its",{extend:"Ext.grid.column.Column",alias:"widget.itscolumn",constructor:function(e){var t=this,n=Ext.apply({hideable:!1,groupable:!1,defaultType:"component"},e),r=n.items,i=n.defaults;delete n.items;delete n.columns;delete n.defaults;t.callParent([n]);t.defaults=i;t.queue={};t.comps=Ext.create("Ext.util.MixedCollection",!1,t.getComponentId);t.itemsConfig=[];r=Ext.isArray(r)?r:[r];Ext.Array.each(r,function(e){Ext.isString(e)&&(e={xtype:e});(Ext.isObject(e)||Ext.isFunction(e))&&t.itemsConfig.push(e)});t.renderer=function(e,r,i,s,o,u,a){var f="",l=t.renderer.caller;if(l.$owner&&l.$owner.xtype=="headercontainer"){var c=t.getIdPrefix(i);t.queue[c]={view:a,store:u,value:e,record:i,rowIdx:s,colIdx:o};f=(Ext.isFunction(n.renderer)?n.renderer.apply(n.scope||t,arguments)||"":"")+'<div id="'+c+'">&#160;</div>'}return f}},onRender:function(){var e=this,t=e.up("tablepanel"),n=t.getView();e.mon(n,"refresh",e.injectItems,e);e.mon(n,"itemadd",e.injectItems,e);e.mon(n,"itemupdate",e.injectItems,e);e.callParent(arguments)},getIdPrefix:function(e){return Ext.String.format("{0}-{1}",this.getId(),e.internalId)},injectItems:function(){var e=this,t=e.queue,n=e.itemsConfig,r=n.length;e.queue={};for(var i in t){var s=t[i],o=Ext.get(i);if(o){for(var u=0;u<r;u++){var a=Ext.clone(n[u])||{};Ext.isFunction(a)&&(a=a(s.value,s.record,s.rowIdx,s.colIdx,s.store,s.view));Ext.isFunction(a.prepare)&&(a=a.prepare.call(a.scope||a,a,s.value,s.record,s.rowIdx,s.colIdx,s.store,s.view));delete a.prepare;a=e.applyDefaults(a);a.itemId=i+"-"+u;e.removeItem(a.itemId);var f=e.lookupComponent(a);if(f&&f.isComponent){f.fireEvent=Ext.bind(f.fireEvent,f,[s.record,s.rowIdx,s.colIdx,s.store,s.view,f],!0);f.render(o.parent(),o);Ext.isIE6&&o.parent().repaint();f.ownerCt=e;e.comps.add(f)}}o.remove()}}},onItemRemove:function(e){var t=this,n=t.getIdPrefix(e),r=0;while(t.removeItem(n+"-"+r))r++},removeItem:function(e){var t=this,n=!1;Ext.isString(e)&&(e=t.comps.getByKey(e));if(e){e.ownerCt=null;t.comps.remove(e);e.destroy();n=!0}return n},$callParent:function(e){var t=this,n=null,r=t.$callParent.caller,i,s;r.$owner||(r=r.caller);i=r.$owner.superclass;s=r.$name;if(t.items===t.comps)n=i[s].apply(t,e||[]);else{var o=t.items;t.items=t.comps;n=i[s].apply(t,e||[]);t.items=o}return n},beforeDestroy:function(){var e=this;e.$callParent(arguments);Ext.destroyMembers(e,"comps","queue","renderer")},doRemove:function(e){this.$callParent(arguments)},removeAll:function(){return this.$callParent(arguments)},getComponent:function(){return this.$callParent(arguments)},getRefItems:function(){return this.$callParent(arguments)},cascade:!1});