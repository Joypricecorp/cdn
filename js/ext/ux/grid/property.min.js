/**
 * @class Ext.grid.property.HeaderContainer
 * @extends Ext.grid.header.Container
 * A custom HeaderContainer for the {@link Ext.grid.property.Grid}.  Generally it should not need to be used directly.
 */Ext.define("Ext.ux.grid.property",{extend:"Ext.grid.header.Container",alternateClassName:"Ext.grid.JPropertyColumnModel",nameWidth:150,nameText:"Name",valueText:"Value",dateFormat:"m/j/Y",trueText:"true",falseText:"false",nameColumnCls:Ext.baseCSSPrefix+"grid-property-name",constructor:function(e,t){var n=this;n.grid=e;n.store=t;e.headerConfig&&(n=Ext.apply(n,e.headerConfig));n.callParent([{items:[{header:n.nameText,width:e.nameColumnWidth||n.nameWidth,sortable:!0,dataIndex:e.nameField,renderer:Ext.Function.bind(n.renderProp,n),itemId:e.nameField,menuDisabled:!0,tdCls:n.nameColumnCls},{header:n.valueText,renderer:Ext.Function.bind(n.renderCell,n),getEditor:Ext.Function.bind(n.getCellEditor,n),flex:1,dataIndex:e.valueField,itemId:e.valueField,menuDisabled:!0}]}])},getCellEditor:function(e){return this.grid.getCellEditor(e,this)},renderProp:function(e){return this.getPropertyName(e)},renderCell:function(e,t,n){if(n.data.renderer)return n.data.renderer.apply(r,arguments);var r=this,i=r.grid.customRenderers[n.get(r.grid.nameField)],s=e;if(i)return i.apply(r,arguments);Ext.isDate(e)?s=r.renderDate(e):Ext.isBoolean(e)&&(s=r.renderBool(e));return Ext.util.Format.htmlEncode(s)},renderDate:Ext.util.Format.date,renderBool:function(e){return this[e?"trueText":"falseText"]},getPropertyName:function(e){var t=this.grid.propertyNames;return t&&t[e]?t[e]:e}});Ext.define("Ext.grid.property.JGrid",{extend:"Ext.grid.Panel",alias:"widget.jpropertygrid",alternateClassName:"Ext.grid.JPropertyGrid",uses:["Ext.grid.plugin.CellEditing","Ext.grid.property.Store","Ext.grid.property.HeaderContainer","Ext.XTemplate","Ext.grid.CellEditor","Ext.form.field.Date","Ext.form.field.Text","Ext.form.field.Number","Ext.grid.feature.Grouping"],valueField:"value",nameField:"name",enableColumnMove:!1,columnLines:!0,stripeRows:!0,trackMouseOver:!1,clicksToEdit:1,enableHdMenu:!1,initComponent:function(){var e=this;e.addCls(Ext.baseCSSPrefix+"property-grid");e.plugins=e.plugins||[];e.plugins.push(Ext.create("Ext.grid.plugin.CellEditing",{clicksToEdit:e.clicksToEdit,startEdit:function(t,n){return this.self.prototype.startEdit.call(this,t,e.headerCt.child("#"+e.valueField))}}));e.selModel={selType:"cellmodel",onCellSelect:function(e){e.column!=1&&(e.column=1);return this.self.prototype.onCellSelect.call(this,e)}};e.customRenderers=e.customRenderers||{};e.customEditors=e.customEditors||{};e.store||(e.propStore=e.store=Ext.create("Ext.grid.property.Store",e,e.source));e.sort&&e.store.sort(e.sort.key,e.sort.dir||"ASC");e.columns=Ext.create("Ext.ux.grid.property",e,e.store);e.addEvents("beforepropertychange","propertychange");e.callParent();e.getView().walkCells=this.walkCells;e.editors={date:function(e){return Ext.create("Ext.grid.CellEditor",{field:Ext.create("Ext.form.field.Date",Ext.apply({selectOnFocus:!0},e||{}))})},string:function(e){return Ext.create("Ext.grid.CellEditor",{field:Ext.create("Ext.form.field.Text",Ext.apply({selectOnFocus:!0},e||{}))})},number:function(e){return Ext.create("Ext.grid.CellEditor",{field:Ext.create("Ext.form.field.Number",Ext.apply({selectOnFocus:!0},e||{}))})},"boolean":function(t){return Ext.create("Ext.grid.CellEditor",{field:Ext.create("Ext.form.field.ComboBox",Ext.apply({editable:!1,store:[[!0,e.headerCt.trueText],[!1,e.headerCt.falseText]]},t||{}))})},combo:function(e){return Ext.create("Ext.grid.CellEditor",{field:Ext.create("Ext.form.field.ComboBox",Ext.apply({queryMode:"local",valueField:"value",displayField:"text"},e||{}))})},multiselect:function(e){return Ext.create("Ext.grid.CellEditor",{field:Ext.create("Ext.ux.ComboFieldBox",Ext.apply({queryMode:"local",valueField:"value",displayField:"text"},e||{}))})}};e.store.on("update",e.onUpdate,e)},onUpdate:function(e,t,n){var r=this,i,s;if(n==Ext.data.Model.EDIT){i=t.get(r.valueField);s=t.modified.value;if(r.fireEvent("beforepropertychange",r.source,t.getId(),i,s)!==!1){r.source&&(r.source[t.getId()]=i);r.fireEvent("propertychange",r.source,t.getId(),i,s)}else t.reject()}},walkCells:function(e,t,n,r,i,s){t=="left"?t="up":t=="right"&&(t="down");e=Ext.view.Table.prototype.walkCells.call(this,e,t,n,r,i,s);e.column||(e.column=1);return e},getCellEditor:function(e,t){var n=this,r=e.get(n.nameField),i=e.get(n.valueField),s=n.customEditors[r];if(s){if(!(s instanceof Ext.grid.CellEditor)){s instanceof Ext.form.field.Base||(s=Ext.ComponentManager.create(s,"textfield"));s=n.customEditors[r]=Ext.create("Ext.grid.CellEditor",Ext.apply({field:s},e.data.config||{}))}}else Ext.isDate(i)?s=n.editors.date(e.data.config):e.data.type=="number"?s=n.editors.number(e.data.config):e.data.type=="boolean"?s=n.editors["boolean"](e.data.config):e.data.type=="multiselect"?s=n.editors.multiselect(e.data.config):e.data.type=="combo"?s=n.editors.combo(e.data.config):s=n.editors.string(e.data.config);s.editorId=r;return s},beforeDestroy:function(){var e=this;e.callParent();e.destroyEditors(e.editors);e.destroyEditors(e.customEditors);delete e.source},destroyEditors:function(e){for(var t in e)e.hasOwnProperty(t)&&Ext.destroy(e[t])},setSource:function(e){this.source=e;this.propStore.setSource(e)},getSource:function(){return this.propStore.getSource()},setProperty:function(e,t,n){this.propStore.setValue(e,t,n)},removeProperty:function(e){this.propStore.remove(e)}});