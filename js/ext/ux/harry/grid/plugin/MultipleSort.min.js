/**
 * @class Ext.ux.grid.plugin.MultipleSort
 * @extends Ext.toolbar.Toolbar
 *
 * @author Harald Hanek (c) 2012
 * @license http://harrydeluxe.mit-license.org
 *
 * This plugin is based on Senchas multiple grid sorting example.
 * @see http://dev.sencha.com/deploy/ext-4.1.0-gpl/examples/grid/multiple-sorting.html
 *
 *
 *
 * @example
 * var multiplesort = Ext.create('Ext.ux.grid.plugin.MultipleSort', {
 *     autoHide: true,
 *     removeText: 'entfernen',
 *     removeAllText: 'alle entfernen',
 *     items: [
 *     {
 *         xtype: 'tbtext',
 *         text: 'Sortierfolge:',
 *         reorderable: false
 *     },
 *     {
 *         text: 'Nationalit√§t',
 *         sortData: {
 *             property: 'nationalitaet'
 *             //direction: 'ASC' // default "ASC"
 *         }
 *     }]
 * });
 *
 * var grid = Ext.create('Ext.grid.Panel', {
 *     ...
 *     dockedItems: [multiplesort],
 *     plugins: [multiplesort],
 *     ...
 *
 */Ext.define("Ext.ux.grid.plugin.MultipleSort",{extend:"Ext.toolbar.Toolbar",alias:"plugin.ux.multiplesort",requires:["Ext.ux.BoxReorderer","Ext.ux.ToolbarDroppable","Ext.menu.Menu"],layout:{overflowHandler:"Menu"},minHeight:29,autoHide:!1,removeText:"remove",removeAllText:"remove all",initComponent:function(){var e=this;e.reorderer=new Ext.ux.BoxReorderer({listeners:{scope:e,Drop:function(t,n,r){e.changeSortDirection(r,!1)}}});e.droppable=new Ext.ux.ToolbarDroppable({createItem:function(t){var n=t.header,r=n.ownerCt,i=r.reorderer;i&&i.dropZone.invalidateDrop();return e.createSorterButtonConfig({text:n.text,sortData:{property:n.dataIndex,direction:"ASC"}})},canDrop:function(t,n,r){var i=e.getSorters(),s=r.header,o=i.length,u=this.calculateEntryIndex(n),a=this.toolbar.getComponent(u),f;if(!s.dataIndex||a&&a.reorderable===!1)return!1;for(f=0;f<o;f++)if(i[f].property==s.dataIndex)return!1;return!0},afterLayout:e.doSort});e.plugins=[e.reorderer,e.droppable];Ext.each(e.items,function(t){t.sortData&&Ext.applyIf(t,e.createSorterButtonConfig(t))},e);e.callParent(arguments)},init:function(e){var t=this;t.grid||(t.grid=e);t.grid.on("render",t.onGridRender,t,{single:!0})},clone:function(){return{init:Ext.emptyFn}},onGridRender:function(e){e.on("afterlayout",this.onGridAfterLayout,this,{single:!0})},onGridAfterLayout:function(e){var t=this,n=e.ownerCt&&e.ownerCt.lockedGrid?e.ownerCt.lockedGrid.headerCt:e.headerCt,r=n.reorderer.dragZone;if(!t.rendered)return!1;t.droppable.addDDGroup(r.ddGroup);r.self.override({onStartDrag:function(){t.autoHide&&t.isHidden()&&t.show(null,function(){Ext.dd.DragDropManager.refreshCache(r.groups)},t)},onEndDrag:function(){t.autoHide&&t.getSorters().length==0&&t.hide()}});t.doSort()},doSort:function(){var e=this.toolbar?this.toolbar:this,t=e.getSorters();if(t.length>=1){e.show();e.grid.store.sort(t)}else e.autoHide&&e.hide()},changeSortDirection:function(e,t){var n=e.sortData,r=e.iconCls;if(n){if(t!==!1){e.sortData.direction=Ext.String.toggle(e.sortData.direction,"ASC","DESC");e.setIconCls(Ext.String.toggle(r,"sort-asc","sort-desc"))}this.grid.store.clearFilter();this.doSort()}},getSorters:function(){var e=[];Ext.each(this.query("button"),function(t){t.sortData&&e.push(t.sortData)},this);return e},createSorterButtonConfig:function(e){var t=this;e.sortData.direction||(e.sortData.direction="ASC");Ext.applyIf(e,{listeners:{click:function(e){t.changeSortDirection(e,!0)},render:function(e){var n=new Ext.menu.Item({text:t.removeAllText,handler:function(){Ext.each(t.query("button"),function(e){e.sortData&&t.remove(e)},t);t.doSort()}}),r=new Ext.menu.Menu({showSeparator:!1,items:[{text:t.removeText,handler:function(){t.remove(e);t.doSort()}},n]}),i=e.getEl();i.on("contextmenu",function(e){n.setVisible(t.getSorters().length>1);e.stopEvent();r.showAt(e.getXY())})},scope:t},iconCls:"sort-"+e.sortData.direction.toLowerCase(),reorderable:!0,xtype:"button"});return e}});