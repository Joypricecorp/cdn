/**
 * @class Ext.ux.grid.property.Grid
 * @extends Ext.grid.property.Grid
 * 
 * @author Harald Hanek (c) 2011-2012
 * @license http://harrydeluxe.mit-license.org
 */Ext.define("Ext.ux.grid.property.Grid",{extend:"Ext.grid.property.Grid",uses:["Ext.ux.grid.property.Store","Ext.ux.grid.property.HeaderContainer","Ext.grid.feature.Grouping"],alias:"widget.ux.propertygrid",groupField:"group",editableField:"editable",groupingConfig:{},viewConfig:{forceFit:!0,getRowClass:function(e){return e.data[this.ownerCt.editableField]==0?"x-item-disabled":""},listeners:{beforeitemmousedown:function(e,t){if(t&&t.data.disabled)return!1}}},initComponent:function(){var e=this,t=e.editableField;Ext.get("Ext.ux.grid.property.Grid")||Ext.getBody().createChild({tag:"style",type:"text/css",id:"Ext.ux.grid.property.Grid",html:".x-item-disabled div.x-grid-cell-inner {color: gray !important;}"});e.addCls(Ext.baseCSSPrefix+"property-grid");e.plugins=e.plugins||[];e.plugins.push(new Ext.grid.plugin.CellEditing({clicksToEdit:e.clicksToEdit,startEdit:function(n,r,i){return n.data&&n.data[t]==0?!1:this.self.prototype.startEdit.call(this,n,e.headerCt.child("#"+e.valueField))}}));e.features=e.features||[];e.groupingFeature=new Ext.grid.feature.Grouping(Ext.apply({groupHeaderTpl:"{name}",enableGroupingMenu:!0,groupField:e.groupField},e.groupingConfig));e.features.push(e.groupingFeature);e.selModel={selType:"cellmodel",onCellSelect:function(n){var r=e.store.getAt(n.row);if(r&&r.data[t]==0)return!1;n.column!=1&&(n.column=1);return this.self.prototype.onCellSelect.call(this,n)}};e.customRenderers=e.customRenderers||{};e.customEditors=e.customEditors||{};e.store&&e.source&&e.store.data.items.length==0&&e.store.loadRawData(e.source);e.store||(e.propStore=e.store=new Ext.ux.grid.property.Store(e,e.source));e.propStore||(e.propStore=e.store);e.columns=new Ext.ux.grid.property.HeaderContainer(e,e.store);e.addEvents("beforepropertychange","propertychange");Ext.grid.Panel.superclass.initComponent.call(e,arguments);e.getView().walkCells=this.walkCells;e.editors={date:new Ext.grid.CellEditor({field:new Ext.form.field.Date({selectOnFocus:!0})}),string:new Ext.grid.CellEditor({field:new Ext.form.field.Text({selectOnFocus:!0})}),number:new Ext.grid.CellEditor({field:new Ext.form.field.Number({selectOnFocus:!0})}),"boolean":new Ext.grid.CellEditor({field:new Ext.form.field.ComboBox({editable:!1,store:[[!0,e.headerCt.trueText],[!1,e.headerCt.falseText]]})})};e.store.on("update",e.onUpdate,e)},getCellEditor:function(e,t){var n=this,r=e.get(n.nameField),i=e.get(n.valueField),s=n.customEditors[r];s=n.customEditors[e.data.editor]||e.data.editor||n.customEditors[r];if(s){if(Ext.isString(s)&&n.editors[s])s=n.editors[s];else if(!(s instanceof Ext.grid.CellEditor)){s instanceof Ext.form.field.Base||(s=Ext.ComponentManager.create(s,"textfield"));s=n.customEditors[r]=new Ext.grid.CellEditor({field:s})}}else Ext.isDate(i)?s=n.editors.date:Ext.isNumber(i)?s=n.editors.number:Ext.isBoolean(i)?s=n.editors["boolean"]:s=n.editors.string;s.editorId=r;return s},walkCells:function(e,t,n,r,i,s){var o=this.ownerCt.editableField;t=="left"?t="up":t=="right"&&(t="down");if(t=="down"&&e.row<e.record.store.data.length-1){var u=e.row,a=null;for(u;u<e.record.store.data.length-1;u++){f=e.record.store.getAt(u+1);if(f.data[o]==0)continue;a=u+1;break}if(!a)return!1;a>e.row&&(e.row=a-1)}if(t=="up"&&e.row!=0){var u=e.row,a=null;for(u;u>0;u--){f=e.record.store.getAt(u-1);if(f.data[o]==0)continue;a=u-1;break}if(a==null)return!1;a<e.row&&(e.row=a+1)}e=Ext.view.Table.prototype.walkCells.call(this,e,t,n,r,i,s);e.column||(e.column=1);return e}});